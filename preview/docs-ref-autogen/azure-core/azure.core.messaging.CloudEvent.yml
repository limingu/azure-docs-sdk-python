### YamlMime:PythonClass
uid: azure.core.messaging.CloudEvent
name: CloudEvent
fullName: azure.core.messaging.CloudEvent
module: azure.core.messaging
inheritances:
- typing.Generic
summary: 'Properties of the CloudEvent 1.0 Schema.

  All required parameters must be populated in order to send to Azure.'
constructor:
  syntax: 'CloudEvent(source: str, type: str, *, specversion: Optional[str] = None,
    id: Optional[str] = None, time: Optional[datetime.datetime] = <object object>,
    datacontenttype: Optional[str] = None, dataschema: Optional[str] = None, subject:
    Optional[str] = None, data: Optional[DataType] = None, extensions: Optional[Dict[str,
    Any]] = None, **kwargs: Any)'
  parameters:
  - name: source
    description: 'Required. Identifies the context in which an event happened. The
      combination of id and source must

      be unique for each distinct event. If publishing to a domain topic, source must
      be the domain topic name.'
    isRequired: true
    types:
    - <xref:str>
  - name: type
    description: Required. Type of event related to the originating occurrence.
    isRequired: true
    types:
    - <xref:str>
  - name: specversion
    description: Optional. The version of the CloudEvent spec. Defaults to "1.0"
    types:
    - <xref:str>
  - name: data
    description: Optional. Event data specific to the event type.
    types:
    - <xref:object>
  - name: time
    description: Optional. The time (in UTC) the event was generated.
    types:
    - <xref:datetime.datetime>
  - name: dataschema
    description: Optional. Identifies the schema that data adheres to.
    types:
    - <xref:str>
  - name: datacontenttype
    description: Optional. Content type of data value.
    types:
    - <xref:str>
  - name: subject
    description: 'Optional. This describes the subject of the event in the context
      of the event producer

      (identified by source).'
    types:
    - <xref:str>
  - name: id
    description: 'Optional. An identifier for the event. The combination of id and
      source must be

      unique for each distinct event. If not provided, a random UUID will be generated
      and used.'
    types:
    - <xref:Optional>[<xref:str>]
  - name: extensions
    description: 'Optional. A CloudEvent MAY include any number of additional context
      attributes

      with distinct names represented as key - value pairs. Each extension must be
      alphanumeric, lower cased

      and must not exceed the length of 20 characters.'
    types:
    - <xref:Optional>[<xref:dict>]
methods:
- uid: azure.core.messaging.CloudEvent.from_dict
  name: from_dict
  summary: 'Returns the deserialized CloudEvent object when a dict is provided.

    :param event: The dict representation of the event which needs to be deserialized.

    :type event: dict

    :rtype: CloudEvent'
  signature: 'from_dict(event: Dict[str, Any]) -> azure.core.messaging.CloudEvent'
  parameters:
  - name: event
    isRequired: true
- uid: azure.core.messaging.CloudEvent.from_json
  name: from_json
  summary: "Returns the deserialized CloudEvent object when a json payload is provided.\n\
    :param event: The json string that should be converted into a CloudEvent. This\
    \ can also be\n\n   a storage QueueMessage, eventhub's EventData or ServiceBusMessage"
  signature: 'from_json(event: Any) -> azure.core.messaging.CloudEvent'
  parameters:
  - name: event
    isRequired: true
  return:
    types:
    - <xref:azure.core.messaging.CloudEvent>
  exceptions:
  - type: ValueError
    description: If the provided JSON is invalid.
attributes:
- uid: azure.core.messaging.CloudEvent.data
  name: data
  summary: Event data specific to the event type.
  signature: 'data: Optional[DataType]'
- uid: azure.core.messaging.CloudEvent.datacontenttype
  name: datacontenttype
  summary: Content type of data value.
  signature: 'datacontenttype: Optional[str]'
- uid: azure.core.messaging.CloudEvent.dataschema
  name: dataschema
  summary: Identifies the schema that data adheres to.
  signature: 'dataschema: Optional[str]'
- uid: azure.core.messaging.CloudEvent.extensions
  name: extensions
  summary: 'A CloudEvent MAY include any number of additional context attributes

    with distinct names represented as key - value pairs. Each extension must be alphanumeric,
    lower cased

    and must not exceed the length of 20 characters.'
  signature: 'extensions: Optional[Dict[str, Any]]'
- uid: azure.core.messaging.CloudEvent.id
  name: id
  summary: 'An identifier for the event. The combination of id and source must be

    unique for each distinct event. If not provided, a random UUID will be generated
    and used.'
  signature: 'id: str'
- uid: azure.core.messaging.CloudEvent.source
  name: source
  summary: 'Identifies the context in which an event happened. The combination of
    id and source must

    be unique for each distinct event. If publishing to a domain topic, source must
    be the domain topic name.'
  signature: 'source: str'
- uid: azure.core.messaging.CloudEvent.specversion
  name: specversion
  summary: The version of the CloudEvent spec. Defaults to "1.0"
  signature: 'specversion: str = ''1.0'''
- uid: azure.core.messaging.CloudEvent.subject
  name: subject
  summary: 'This describes the subject of the event in the context of the event producer

    (identified by source)'
  signature: 'subject: Optional[str]'
- uid: azure.core.messaging.CloudEvent.time
  name: time
  summary: The time (in UTC) the event was generated.
  signature: 'time: Optional[datetime.datetime]'
- uid: azure.core.messaging.CloudEvent.type
  name: type
  summary: Type of event related to the originating occurrence.
  signature: 'type: str'
