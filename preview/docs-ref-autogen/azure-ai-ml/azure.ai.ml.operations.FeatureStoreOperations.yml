### YamlMime:PythonClass
uid: azure.ai.ml.operations.FeatureStoreOperations
name: FeatureStoreOperations
fullName: azure.ai.ml.operations.FeatureStoreOperations
module: azure.ai.ml.operations
inheritances:
- azure.ai.ml.operations._workspace_operations_base.WorkspaceOperationsBase
summary: '> [!NOTE]

  > This is an experimental class, and may change at any time. Please see [https://aka.ms/azuremlexperimental](https://aka.ms/azuremlexperimental)
  for more information.

  >


  FeatureStoreOperations.


  You should not instantiate this class directly. Instead, you should

  create an MLClient instance that instantiates it for you and

  attaches it as an attribute.'
constructor:
  syntax: 'FeatureStoreOperations(operation_scope: azure.ai.ml._scope_dependent_operations.OperationScope,
    service_client: azure.ai.ml._restclient.v2022_12_01_preview._azure_machine_learning_workspaces.AzureMachineLearningWorkspaces,
    all_operations: azure.ai.ml._scope_dependent_operations.OperationsContainer, credentials:
    Optional[azure.core.credentials.TokenCredential] = None, **kwargs: Dict)'
methods:
- uid: azure.ai.ml.operations.FeatureStoreOperations.begin_create
  name: begin_create
  summary: 'Create a new FeatureStore.


    Returns the feature store if already exists.'
  signature: 'begin_create(feature_store: azure.ai.ml.entities._feature_store.feature_store.FeatureStore,
    update_dependent_resources: bool = False, **kwargs: Dict) -> azure.core.polling._poller.LROPoller[azure.ai.ml.entities._feature_store.feature_store.FeatureStore]'
  parameters:
  - name: store
    description: FeatureStore definition.
    isRequired: true
    types:
    - <xref:feature>
  return:
    description: An instance of LROPoller that returns a FeatureStore.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.ml.entities.FeatureStore>]
- uid: azure.ai.ml.operations.FeatureStoreOperations.begin_delete
  name: begin_delete
  summary: Delete a FeatureStore.
  signature: 'begin_delete(name: str, *, delete_dependent_resources: bool, **kwargs:
    Dict) -> azure.core.polling._poller.LROPoller'
  parameters:
  - name: name
    description: Name of the FeatureStore
    isRequired: true
    types:
    - <xref:str>
  - name: delete_dependent_resources
    description: 'Whether to delete resources associated with the feature store,

      i.e., container registry, storage account, key vault, and application insights.

      The default is False. Set to True to delete these resources.'
    isRequired: true
    types:
    - <xref:bool>
  return:
    description: A poller to track the operation status.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
- uid: azure.ai.ml.operations.FeatureStoreOperations.begin_update
  name: begin_update
  summary: Update friendly name, description, materialization identities or tags of
    a feature store.
  signature: 'begin_update(feature_store: azure.ai.ml.entities._feature_store.feature_store.FeatureStore,
    *, update_dependent_resources: bool = False, **kwargs: Dict) -> azure.core.polling._poller.LROPoller[azure.ai.ml.entities._feature_store.feature_store.FeatureStore]'
  parameters:
  - name: store
    description: FeatureStore resource.
    isRequired: true
    types:
    - <xref:feature>
  - name: update_dependent_resources
    description: 'gives your consent to update the feature store dependent resources.

      Note that updating the feature store attached Azure Container Registry resource
      may break lineage

      of previous jobs or your ability to rerun earlier jobs in this feature store.

      Also, updating the feature store attached Azure Application Insights resource
      may break lineage of

      deployed inference endpoints this feature store. Only set this argument if you
      are sure that you want

      to perform this operation. If this argument is not set, the command to update

      Azure Container Registry and Azure Application Insights will fail.'
    isRequired: true
  - name: application_insights
    description: Application insights resource for feature store.
    isRequired: true
  - name: container_registry
    description: Container registry resource for feature store.
    isRequired: true
  return:
    description: An instance of LROPoller that returns a FeatureStore.
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.ai.ml.entities.FeatureStore>]
- uid: azure.ai.ml.operations.FeatureStoreOperations.get
  name: get
  summary: Get a feature store by name.
  signature: 'get(name: str, **kwargs: Dict) -> azure.ai.ml.entities._feature_store.feature_store.FeatureStore'
  parameters:
  - name: name
    description: Name of the feature store.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: The feature store with the provided name.
    types:
    - <xref:azure.ai.ml.entities.FeatureStore>
- uid: azure.ai.ml.operations.FeatureStoreOperations.list
  name: list
  summary: 'List all feature stores that the user has access to in the current

    resource group or subscription.'
  signature: 'list(*, scope: str = ''resource_group'') -> Iterable[azure.ai.ml.entities._feature_store.feature_store.FeatureStore]'
  parameters:
  - name: scope
    description: scope of the listing, "resource_group" or "subscription", defaults
      to "resource_group"
    isRequired: true
    types:
    - <xref:str>, <xref:optional>
  return:
    description: An iterator like instance of FeatureStore objects
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.ai.ml.entities.FeatureStore>]
