### YamlMime:PythonClass
uid: azure.mgmt.machinelearningservices.models.ImageModelDistributionSettings
name: ImageModelDistributionSettings
fullName: azure.mgmt.machinelearningservices.models.ImageModelDistributionSettings
module: azure.mgmt.machinelearningservices.models
inheritances:
- azure.mgmt.machinelearningservices._serialization.Model
summary: "Distribution expressions to sweep over values of model settings.\n\n`<example>\n\
  Some examples are:\n<code>\nModelName = \"choice('seresnext', 'resnest50')\";\n\
  LearningRate = \"uniform(0.001, 0.01)\";\nLayersToFreeze = \"choice(0, 2)\";\n</code></example>`\n\
  All distributions can be specified as distribution_name(min, max) or choice(val1,\
  \ val2, ..., valn)\nwhere distribution name can be: uniform, quniform, loguniform,\
  \ etc\nFor more details on how to compose distribution expressions please check\
  \ the documentation:\n[https://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-tune-hyperparameters)\n\
  For more information on the available settings please visit the official documentation:\n\
  [https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models).\n\
  \n   ivar ams_gradient:\n      Enable AMSGrad when optimizer is 'adam' or 'adamw'.\n\
  \n   vartype ams_gradient:\n      str\n\n   ivar augmentations:\n      Settings\
  \ for using Augmentations.\n\n   vartype augmentations:\n      str\n\n   ivar beta1:\n\
  \      Value of 'beta1' when optimizer is 'adam' or 'adamw'. Must be a float in\
  \ the range\n      [0, 1].\n\n   vartype beta1:\n      str\n\n   ivar beta2:\n \
  \     Value of 'beta2' when optimizer is 'adam' or 'adamw'. Must be a float in the\
  \ range\n      [0, 1].\n\n   vartype beta2:\n      str\n\n   ivar distributed:\n\
  \      Whether to use distributer training.\n\n   vartype distributed:\n      str\n\
  \n   ivar early_stopping:\n      Enable early stopping logic during training.\n\n\
  \   vartype early_stopping:\n      str\n\n   ivar early_stopping_delay:\n      Minimum\
  \ number of epochs or validation evaluations to wait before\n      primary metric\
  \ improvement\n      is tracked for early stopping. Must be a positive integer.\n\
  \n   vartype early_stopping_delay:\n      str\n\n   ivar early_stopping_patience:\n\
  \      Minimum number of epochs or validation evaluations with no\n      primary\
  \ metric improvement before\n      the run is stopped. Must be a positive integer.\n\
  \n   vartype early_stopping_patience:\n      str\n\n   ivar enable_onnx_normalization:\n\
  \      Enable normalization when exporting ONNX model.\n\n   vartype enable_onnx_normalization:\n\
  \      str\n\n   ivar evaluation_frequency:\n      Frequency to evaluate validation\
  \ dataset to get metric scores. Must\n      be a positive integer.\n\n   vartype\
  \ evaluation_frequency:\n      str\n\n   ivar gradient_accumulation_step:\n    \
  \  Gradient accumulation means running a configured number of\n      \"GradAccumulationStep\"\
  \ steps without\n      updating the model weights while accumulating the gradients\
  \ of those steps, and then using\n      the accumulated gradients to compute the\
  \ weight updates. Must be a positive integer.\n\n   vartype gradient_accumulation_step:\n\
  \      str\n\n   ivar layers_to_freeze:\n      Number of layers to freeze for the\
  \ model. Must be a positive integer.\n      For instance, passing 2 as value for\
  \ 'seresnext' means\n      freezing layer0 and layer1. For a full list of models\
  \ supported and details on layer freeze,\n      please\n      see: [https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models).\n\
  \n   vartype layers_to_freeze:\n      str\n\n   ivar learning_rate:\n      Initial\
  \ learning rate. Must be a float in the range [0, 1].\n\n   vartype learning_rate:\n\
  \      str\n\n   ivar learning_rate_scheduler:\n      Type of learning rate scheduler.\
  \ Must be 'warmup_cosine' or\n      'step'.\n\n   vartype learning_rate_scheduler:\n\
  \      str\n\n   ivar model_name:\n      Name of the model to use for training.\n\
  \      For more information on the available models please visit the official documentation:\n\
  \      [https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models).\n\
  \n   vartype model_name:\n      str\n\n   ivar momentum:\n      Value of momentum\
  \ when optimizer is 'sgd'. Must be a float in the range [0, 1].\n\n   vartype momentum:\n\
  \      str\n\n   ivar nesterov:\n      Enable nesterov when optimizer is 'sgd'.\n\
  \n   vartype nesterov:\n      str\n\n   ivar number_of_epochs:\n      Number of\
  \ training epochs. Must be a positive integer.\n\n   vartype number_of_epochs:\n\
  \      str\n\n   ivar number_of_workers:\n      Number of data loader workers. Must\
  \ be a non-negative integer.\n\n   vartype number_of_workers:\n      str\n\n   ivar\
  \ optimizer:\n      Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'.\n\
  \n   vartype optimizer:\n      str\n\n   ivar random_seed:\n      Random seed to\
  \ be used when using deterministic training.\n\n   vartype random_seed:\n      str\n\
  \n   ivar step_lr_gamma:\n      Value of gamma when learning rate scheduler is 'step'.\
  \ Must be a float in\n      the range [0, 1].\n\n   vartype step_lr_gamma:\n   \
  \   str\n\n   ivar step_lr_step_size:\n      Value of step size when learning rate\
  \ scheduler is 'step'. Must be a\n      positive integer.\n\n   vartype step_lr_step_size:\n\
  \      str\n\n   ivar training_batch_size:\n      Training batch size. Must be a\
  \ positive integer.\n\n   vartype training_batch_size:\n      str\n\n   ivar validation_batch_size:\n\
  \      Validation batch size. Must be a positive integer.\n\n   vartype validation_batch_size:\n\
  \      str\n\n   ivar warmup_cosine_lr_cycles:\n      Value of cosine cycle when\
  \ learning rate scheduler is\n      'warmup_cosine'. Must be a float in the range\
  \ [0, 1].\n\n   vartype warmup_cosine_lr_cycles:\n      str\n\n   ivar warmup_cosine_lr_warmup_epochs:\n\
  \      Value of warmup epochs when learning rate scheduler is\n      'warmup_cosine'.\
  \ Must be a positive integer.\n\n   vartype warmup_cosine_lr_warmup_epochs:\n  \
  \    str\n\n   ivar weight_decay:\n      Value of weight decay when optimizer is\
  \ 'sgd', 'adam', or 'adamw'. Must be\n      a float in the range[0, 1].\n\n   vartype\
  \ weight_decay:\n      str"
constructor:
  syntax: 'ImageModelDistributionSettings(*, ams_gradient: Optional[str] = None, augmentations:
    Optional[str] = None, beta1: Optional[str] = None, beta2: Optional[str] = None,
    distributed: Optional[str] = None, early_stopping: Optional[str] = None, early_stopping_delay:
    Optional[str] = None, early_stopping_patience: Optional[str] = None, enable_onnx_normalization:
    Optional[str] = None, evaluation_frequency: Optional[str] = None, gradient_accumulation_step:
    Optional[str] = None, layers_to_freeze: Optional[str] = None, learning_rate: Optional[str]
    = None, learning_rate_scheduler: Optional[str] = None, model_name: Optional[str]
    = None, momentum: Optional[str] = None, nesterov: Optional[str] = None, number_of_epochs:
    Optional[str] = None, number_of_workers: Optional[str] = None, optimizer: Optional[str]
    = None, random_seed: Optional[str] = None, step_lr_gamma: Optional[str] = None,
    step_lr_step_size: Optional[str] = None, training_batch_size: Optional[str] =
    None, validation_batch_size: Optional[str] = None, warmup_cosine_lr_cycles: Optional[str]
    = None, warmup_cosine_lr_warmup_epochs: Optional[str] = None, weight_decay: Optional[str]
    = None, **kwargs)'
  parameters:
  - name: ams_gradient
    description: Enable AMSGrad when optimizer is 'adam' or 'adamw'.
    types:
    - <xref:str>
  - name: augmentations
    description: Settings for using Augmentations.
    types:
    - <xref:str>
  - name: beta1
    description: 'Value of ''beta1'' when optimizer is ''adam'' or ''adamw''. Must
      be a float in the

      range [0, 1].'
    types:
    - <xref:str>
  - name: beta2
    description: 'Value of ''beta2'' when optimizer is ''adam'' or ''adamw''. Must
      be a float in the

      range [0, 1].'
    types:
    - <xref:str>
  - name: distributed
    description: Whether to use distributer training.
    types:
    - <xref:str>
  - name: early_stopping
    description: Enable early stopping logic during training.
    types:
    - <xref:str>
  - name: early_stopping_delay
    description: 'Minimum number of epochs or validation evaluations to wait

      before primary metric improvement

      is tracked for early stopping. Must be a positive integer.'
    types:
    - <xref:str>
  - name: early_stopping_patience
    description: 'Minimum number of epochs or validation evaluations with no

      primary metric improvement before

      the run is stopped. Must be a positive integer.'
    types:
    - <xref:str>
  - name: enable_onnx_normalization
    description: Enable normalization when exporting ONNX model.
    types:
    - <xref:str>
  - name: evaluation_frequency
    description: 'Frequency to evaluate validation dataset to get metric scores.

      Must be a positive integer.'
    types:
    - <xref:str>
  - name: gradient_accumulation_step
    description: 'Gradient accumulation means running a configured number of

      "GradAccumulationStep" steps without

      updating the model weights while accumulating the gradients of those steps,
      and then using

      the accumulated gradients to compute the weight updates. Must be a positive
      integer.'
    types:
    - <xref:str>
  - name: layers_to_freeze
    description: 'Number of layers to freeze for the model. Must be a positive

      integer.

      For instance, passing 2 as value for ''seresnext'' means

      freezing layer0 and layer1. For a full list of models supported and details
      on layer freeze,

      please

      see: [https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models).'
    types:
    - <xref:str>
  - name: learning_rate
    description: Initial learning rate. Must be a float in the range [0, 1].
    types:
    - <xref:str>
  - name: learning_rate_scheduler
    description: 'Type of learning rate scheduler. Must be ''warmup_cosine'' or

      ''step''.'
    types:
    - <xref:str>
  - name: model_name
    description: 'Name of the model to use for training.

      For more information on the available models please visit the official documentation:

      [https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-auto-train-image-models).'
    types:
    - <xref:str>
  - name: momentum
    description: 'Value of momentum when optimizer is ''sgd''. Must be a float in
      the range [0,

      1].'
    types:
    - <xref:str>
  - name: nesterov
    description: Enable nesterov when optimizer is 'sgd'.
    types:
    - <xref:str>
  - name: number_of_epochs
    description: Number of training epochs. Must be a positive integer.
    types:
    - <xref:str>
  - name: number_of_workers
    description: Number of data loader workers. Must be a non-negative integer.
    types:
    - <xref:str>
  - name: optimizer
    description: Type of optimizer. Must be either 'sgd', 'adam', or 'adamw'.
    types:
    - <xref:str>
  - name: random_seed
    description: Random seed to be used when using deterministic training.
    types:
    - <xref:str>
  - name: step_lr_gamma
    description: 'Value of gamma when learning rate scheduler is ''step''. Must be
      a float

      in the range [0, 1].'
    types:
    - <xref:str>
  - name: step_lr_step_size
    description: 'Value of step size when learning rate scheduler is ''step''. Must
      be

      a positive integer.'
    types:
    - <xref:str>
  - name: training_batch_size
    description: Training batch size. Must be a positive integer.
    types:
    - <xref:str>
  - name: validation_batch_size
    description: Validation batch size. Must be a positive integer.
    types:
    - <xref:str>
  - name: warmup_cosine_lr_cycles
    description: 'Value of cosine cycle when learning rate scheduler is

      ''warmup_cosine''. Must be a float in the range [0, 1].'
    types:
    - <xref:str>
  - name: warmup_cosine_lr_warmup_epochs
    description: 'Value of warmup epochs when learning rate scheduler is

      ''warmup_cosine''. Must be a positive integer.'
    types:
    - <xref:str>
  - name: weight_decay
    description: 'Value of weight decay when optimizer is ''sgd'', ''adam'', or ''adamw''.
      Must

      be a float in the range[0, 1].'
    types:
    - <xref:str>
